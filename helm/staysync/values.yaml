# Default values for staysync
# This is a YAML-formatted file.

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Image settings
image:
  registry: docker.io
  repository: staysync
  tag: "latest"
  pullPolicy: IfNotPresent

# Image pull secrets
imagePullSecrets: []

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod security context
podSecurityContext:
  fsGroup: 2000

# Security context
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 80

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: staysync.pydahsoft.in
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: staysync-tls
      hosts:
        - staysync.pydahsoft.in

# Backend configuration
backend:
  image:
    repository: staysync-backend
    tag: "latest"
    pullPolicy: IfNotPresent
  
  replicaCount: 3
  
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "50m"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: api.staysync.pydahsoft.in
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: api-staysync-tls
        hosts:
          - api.staysync.pydahsoft.in

# Frontend configuration
frontend:
  image:
    repository: staysync-frontend
    tag: "latest"
    pullPolicy: IfNotPresent
  
  replicaCount: 2
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# MongoDB configuration
mongodb:
  enabled: true
  auth:
    enabled: true
    rootUsername: admin
    rootPassword: password123
    database: staysync
  primary:
    persistence:
      enabled: true
      size: 10Gi
      storageClass: ""
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 1Gi
      storageClass: ""
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# ConfigMap
configMap:
  data:
    FLASK_ENV: "production"
    FLASK_DEBUG: "false"
    CORS_ORIGINS: "https://staysync.pydahsoft.in,https://crt.pydahsoft.in"
    ALLOW_ALL_CORS: "false"
    REDIS_URL: "redis://staysync-redis:6379/0"
    AWS_REGION: "us-east-1"
    JWT_ACCESS_TOKEN_EXPIRES: "3600"
    JWT_REFRESH_TOKEN_EXPIRES: "86400"

# Secrets
secrets:
  mongodb-uri: "mongodb://admin:password123@staysync-mongodb:27017/staysync?authSource=admin"
  jwt-secret-key: "your-super-secret-jwt-key-change-in-production"
  aws-access-key-id: ""
  aws-secret-access-key: ""
  aws-s3-bucket: ""
  brevo-api-key: ""

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}
