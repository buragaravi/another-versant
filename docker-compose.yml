version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: staysync-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: staysync
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - staysync-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: staysync-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - staysync-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: staysync-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Database
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/staysync?authSource=admin
      
      # JWT
      JWT_SECRET_KEY: your-super-secret-jwt-key-change-in-production
      
      # AWS S3 (optional for local development)
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET:-}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      
      # Email Service
      BREVO_API_KEY: ${BREVO_API_KEY:-}
      
      # CORS
      CORS_ORIGINS: http://localhost:3000,http://localhost:5173,http://localhost:80
      ALLOW_ALL_CORS: "true"
      
      # Flask
      FLASK_ENV: development
      FLASK_DEBUG: "true"
      
      # Redis
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - staysync-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: staysync-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      VITE_API_URL: http://localhost:8000
    depends_on:
      - backend
    networks:
      - staysync-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer (for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: staysync-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - frontend
      - backend
    networks:
      - staysync-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  staysync-network:
    driver: bridge
